CCS PCM C Compiler, Version 5.015, 5967               28-Nis-25 16:01

               Filename:   C:\Users\MONSTER\Desktop\proje\main.lst

               ROM used:   65 words (1%)
                           Largest free fragment is 2048
               RAM used:   6 (2%) at main() level
                           7 (2%) worst case
               Stack used: 1 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   019
0003:  NOP
.................... #include <16f877.h> 
.................... //////////// Standard Header file for the PIC16F877 device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F877 
....................  
.................... #list 
....................  
.................... #use delay(clock=4000000) 
0004:  MOVLW  22
0005:  MOVWF  04
0006:  BCF    03.7
0007:  MOVF   00,W
0008:  BTFSC  03.2
0009:  GOTO   018
000A:  MOVLW  01
000B:  MOVWF  78
000C:  CLRF   77
000D:  DECFSZ 77,F
000E:  GOTO   00D
000F:  DECFSZ 78,F
0010:  GOTO   00C
0011:  MOVLW  4A
0012:  MOVWF  77
0013:  DECFSZ 77,F
0014:  GOTO   013
0015:  GOTO   016
0016:  DECFSZ 00,F
0017:  GOTO   00A
0018:  RETURN
.................... void main () 
0019:  MOVF   03,W
001A:  ANDLW  1F
001B:  MOVWF  03
001C:  BSF    03.5
001D:  BSF    1F.0
001E:  BSF    1F.1
001F:  BSF    1F.2
0020:  BCF    1F.3
0021:  BCF    03.7
.................... { 
.................... set_tris_b(0xF0); // MSB 4 pin INPUT (F=1111), LSB 4 pin OUTPUT (0=0000) yapýldý. 
0022:  MOVLW  F0
0023:  MOVWF  06
.................... output_b(0x00); // Bütün pinler lojik-0 yapýldý. 
0024:  CLRF   06
0025:  BCF    03.5
0026:  CLRF   06
....................   
.................... while(true) 
....................  { 
....................   
....................  if(input(pin_b4)==1) // pin_b4 (buton baðlý) lojik 1 olursa þartý. 
0027:  BSF    03.5
0028:  BSF    06.4
0029:  BCF    03.5
002A:  BTFSS  06.4
002B:  GOTO   038
....................  { 
....................  output_high(pin_b0); // pin_b0 çýkýþýný (led baðlý) lojik 1 yap.  
002C:  BSF    03.5
002D:  BCF    06.0
002E:  BCF    03.5
002F:  BSF    06.0
....................  delay_ms(1000);  
0030:  MOVLW  04
0031:  MOVWF  21
0032:  MOVLW  FA
0033:  MOVWF  22
0034:  CALL   004
0035:  DECFSZ 21,F
0036:  GOTO   032
....................  } 
0037:  GOTO   03F
....................  else  
....................  { 
....................  output_low(pin_b0); // buton basýlý deðilse led çýkýþýný 0 yap. 
0038:  BSF    03.5
0039:  BCF    06.0
003A:  BCF    03.5
003B:  BCF    06.0
....................  delay_ms(100); 
003C:  MOVLW  64
003D:  MOVWF  22
003E:  CALL   004
....................  } 
003F:  GOTO   027
....................  } 
.................... } 
....................  
0040:  SLEEP

Configuration Fuses:
   Word  1: 3F73   RC NOWDT PUT BROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
